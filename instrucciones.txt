
Hola a todos,
  Hemos creado el proyecto "pse2019" en github, para que realicemos práctica 
de git a un repositorio remoto compartido.

https://github.com/zrafa/pse2019

En particular se debe "empujar" (mala traducción para git push) al repositorio 
en github los trabajos prácticos. 

Además, se debe proveer un pequeño archivo de texto README a cada trabajo 
práctico, que nos indique de que manera se puede ejecutar los tests 
para verificar las implementaciones que se hicieron.

Para la parte de git haremos lo siguiente :

1. Crear una cuenta en la web de github y enviarnos el nombre de usuario 
a través del foro consulta o por correo. Nosotros agregaremos el usuario 
al proyecto pse2019 de github, para que tengamos permiso de hacer push 
a ese repositorio.
2. Luego de que hayamos sido agregados al proyecto pueden subir los 
trabajos prácticos. 
Para esta tarea vamos a utilizar la siguiente convención :

Agreguen al proyecto un directorio llamado nombre.apellido. Como ejemplo 
observen el que ya he agregado (rafael.zurita/), y dentro de ese directorio 
colocan las resoluciones de los trabajos prácticos en directorios diferentes,
llamados TP1, TP2, TP3, etc.
Finalmente, la estructura de directorios tiene que quedar como la de 
este ejemplo :

proyecto pse2019 raiz
                 |--------> rafael.zurita/
                                 |-----> TP1/
                                 |-----> TP2/
                                 |-----> TP3/

La entrega de los trabajos prácticos es individual, aún cuando hayan sido 
resueltos en grupo. Asi que es lógico que repitan los archivos pero es para 
que todos realicemos la práctica de git.

IMPORTANTE: No suben al repositorio remoto archivos objetos ni binarios 
ejecutables. Solo archivos de texto. Tampoco suben archivos PDF. 
Así que conviene realizar make clean antes de un git add.

Como ejemplo, estos son los comandos y pasos que he seguido para subir 
la resolución del primer práctico siguiendo esta convención:

git clone https://github.com/zrafa/pse2019.git       # el clone se hace una unica vez
git config ­­global user.name "Rafael Ignacio Zurita"  # usan vuestro nombre y mail :)
git config ­­global user.email "rafa@fi.uncoma.edu.ar"

# estos dos comandos anteriores tambien los deben hacer una unica vez


cd pse2019/
git pull         #siempre un git pull antes de comenzar a trabajar

mkdir rafael.zurita
cd rafael.zurita
mkdir TP1
cp /tmp/TP1/*   TP1/  # copio mi resolucion del tp1 al nuevo directorio
                      # en este ejemplo tenía resuelto el TP1 en /tmp/TP1/
cd TP1
make clean	# nos aseguramos que no subiremos al repo remoto archivos 
		# objetos o binarios ejecutables
rm *pdf         # quito el archivo pdf del enunciado del practico si existe
cd ../..     # retrocedo dos directorios para posicionarme en el directorio raiz

git add rafaelzurita      # el git add es recursivo, asi que agrega el 
			  # directorio y sus subdirectorios y archivos
git commit -m "Agrego la resolucion del tp1"

git pull      # importante antes de hacer un push. Resolvemos conflictos 
	      # si hubiera
git push      # el push hará una conexion web a github y les pide el 
	      # usuario y clave de github

Usen este ejemplo como referencia. Para crear los directorios, copiar y 
borrar archivos lo pueden realizar como a cada uno le parezca mas comodo. 
Este ejemplo utiliza comandos desde el shell sólo de referencia. 
Los comandos de git si conviene ejecutarlos desde el shell. Existen 
herramientas graficas de git que vienen en Linux, pero via comandos se 
comprende mejor la sintaxis.

Cualquier consulta de esta práctica en git o de la entrega de los tps 
podemos utilizar el foro consultas.

Saludos,
La cátedra
